/** \file Agenda.hh
    \brief Espesificació de la classe Agenda
*/

#ifndef _AGENDA_HH_
#define _AGENDA_HH_

#include <set>
#include <map>
#include <string>
#include "Tasca.hh"
#include "Rellotge.hh"

/** \class Agenda
    \brief Representa una agenda amb els atributs tasques y hora??
*/
class Agenda
{
public:
  //Constructores 

  /** \brief Creadora per defecte. 

      S'executa automaticament al declarar l'agenda.
      \pre cert
      \post el resultat es una agenda sense valors deteminats per als 
      seus atributs
  */   
  Agenda();
  
  //Modificadores

  /** \brief 
      \pre 
      \post 
   */
  void insereix_amb_data(string titol, string data, string hora);
  
  /** \brief Afegeix una tasca a l'atribut tasques a l'hora actual
      \pre la tasca es vàlida
      \post el p.i. conté la tasca en el parametre tasques
   */  
  void insereix_sense_data(string titol, string hora);
  
  /** \brief 
      \pre 
      \post 
   */
  void canviar_titol(int tasca, string titol); 
  
  /** \brief Afegeix una etiqueta a la tasca donada
      \pre el p.i. conté la tasca
      \post la tasca del p.i. té la nova etiqueta 
  */ 
  void afegir_etiqueta(int tasca, string etiqueta_i);
  
  /** \brief 
      \pre 
      \post 
   */  
  void canviar_hora(int tasca, string hora); 
  
  /** \brief 
      \pre 
      \post 
   */  
  void canviar_data(int tasca, string data);      

  /** \brief 
      \pre 
      \post 
   */   
  void consulta_rellotge();
  
  /** \brief 
      \pre 
      \post 
   */  
  void avanca_data(string data);

  /** \brief 
      \pre 
      \post 
   */  
  void avanca_hora(string hora);
  
  /** \brief 
      \pre 
      \post 
   */  
  void esborrar_tasca(int tasca); 

  /** \brief 
      \pre 
      \post 
   */  
  void esborrar_etiqueta(int tasca, string etiqueta_i); 
  
  /** \brief 
      \pre 
      \post 
   */  
  void esborrar_etiqueta(int tasca, string etiqueta_i);        


  //Consultores
  
  /** \brief Consulta totes les tasques futures
      \pre cert
      \post s'han escrit els atributs del p.i. posteriors a la data
      actual pel canal estàndard de sortida
   */
  void consulta();

  /** \brief Consulta les taseques que satisfan l'expressio
      \pre l'expressió és ben parenteritzada
      \post s'han escrit els atributs del p.i. que satisfan la 
      expressió pel canal estàndard de sortida
   */
  void consulta(string expressio);

  /** \brief Consulta totes les tasques d'un dia
      \pre la data és vàlida
      \post s'han escrit els atributs del p.i. de la data donada
      pel canal estàndard de sortida
   */
  void consulta(string data);

  /** \brief Consulta les tasques d'un dia que satisfan l'expressió
      \pre la data és vàlida i la expressió ben parenteritzada
      \post s'han escrit els atributs del p.i. de la data donada que 
      satisfan l'expressió pel canal estàndard de sortida
   */
  void consulta(string data, string expressio);

  /** \brief Consulta les tasques dintre d'un període que satisfan 
      l'expressió
      \pre les dates són els extems del interval, són vàlides i la 
      expressió està ben parenteritzada
      \post s'han escrit els atributs del p.i. contingunts en l'interval 
      que satisfan l'expressió pel canal estàndard de sortida
   */
  void consulta(string data1, string data2, string expressio);

  /** \brief Consulta totes les tasques dintre d'un període de temps
      \pre les dates són els extems del interval i són vàlides
      \post s'han escrit els atributs del p.i. contingunts en l'interval 
      canal estàndard de sortida
   */
  void consulta(string data1,string data2);

  /** \brief Operació d'escritura
      \pre cert
      \post s'han escrit els atributs del p.i. anteriors a la data
      actual pel canal estàndard de sortida
  */
  void escriu_passat(); // const?
  
private:


  
};

#endif
